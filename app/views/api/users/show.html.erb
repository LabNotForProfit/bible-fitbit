<% content_for :head do %>
	<%= stylesheet_link_tag 'users/users', media: 'all', 'data-turbolinks-track' => true %>
	<%= javascript_include_tag 'users/userShow', 'data-turbolinks-track' => true %>

<% end %>

<div class="container">
	<div class="row">
		<div class="avatar-container">
			<%= image_tag @user.avatar.url(:square), class: "col-md-offset-1 col-md-2 avatar", id: "profile-avatar" %>
		</div>
		<div id="profile-name" class="col-md-4">
			<h2><%= @user.firstname %> <%= @user.lastname %></h2>
		</div>
	</div>
	<div class="row">
		<div id="profile-info" class="col-md-4 col-md-offset-3">
			Joined: <%= @user.created_at.to_formatted_s(:long_ordinal) %>
		</div>
	</div>

	<div class="row">
		<div class="col-md-4 col-md-offset-3">
			<% if @user == current_user %>
				<p>
					<%= link_to "Edit Your Profile", edit_api_user_path(current_user) , class: "btn btn-primary" %>
				</p>
			<% elsif current_user.friends.include? @user %>
				<!-- If this user is in the current_users friend list make a link to unfriend -->
				<!-- To get the friendship we would delete, find by friend_id with this user -->
				<%= link_to content_tag(:span, " Friends", class: "glyphicon glyphicon-ok"), api_friendship_path(current_user.friendships.find_by_friend_id(@user.id)), :method => :delete, class: "btn btn-success friend" %>
			<% elsif current_user.pending_friends.include? @user %>
				<%= content_tag(:span, "Friend Request Sent", class: "btn btn-info disabled") %>
			<% else %>
				<!-- Otherwise, make a link to add friend -->
				<%= link_to content_tag(:span, " Add Friend", class: "glyphicon glyphicon-send"), api_friend_requests_path(:friend_id => @user), :method => :post, class: "btn btn-success add-friend" %>
			<% end %>
		</div>
	</div>

	<% if (@user == current_user || current_user.friends.include?(@user)) %>
	<!-- If this is the current user or a friend of the current user, we can see their progress -->
		<div class="row profile-data-container">
			<table class="table">
				<thead>
					<tr>
						<th class="profile-data-title">
							<h3>Finished Books</h3>
						</th>
						<th class="profile-data-title">
							<h3>Current Book</h3>
						</th>
						<th class="profile-data-title">
							<h3>Total Progress</h3>
						</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="profile-data">
							<% @user.books.order(:order_num).each do |book| %>
								<p><%= book.name %></p>
							<% end %>
						</td>
						<td class="profile-data">
							<%= @user.current_book.name %>
						</td>
						<td class="profile-data center">
							<input class="dial" value="0" rel="100">
						</td>
					</tr>
				</tbody>
			</table>

			<table class="table">
				<thead>
					<tr>
						<th class="profile-data-title">
							<h3>Quiz Scores</h3>
						</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<%= select_tag "Book", options_from_collection_for_select(@books, "id", "name", @user.current_book.id), {id: 'bookSelect', class: "form-control"} %>
						</td>
					</td>
					<tr>
						<td>
							<div id="score-graph">
							<% current_user.quiz_scores.each do |score| %>
								<p><%= score.book.name %> <%= "#{(score.score * 100).to_i}%" %> <%= score.created_at.strftime("%B %-d, %Y") %></p>
							<% end %>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	<% end %>
</div>

<script>
	createDial();
	$('.dial').each(function () {
        var $this = $(this);
        var myVal = <%= @user.books.length / 66.0 * 100.0 %>
        $this.knob({});
        $({ value: 0 }).animate({value: myVal}, {
            duration: 2500,
            easing: 'swing',
            step: function () {
                $this.val(Math.ceil(this.value)).trigger('change');
            }
        });
    });
</script>

<script>
	$(function () { 
		days = [];
    	for (var i = 0; i < 7; i++) {
    		days[i] = (7-i).days().ago().toString('MMMM dS');
    	};
    	scores = <%= @scores %>

	    $('#score-graph').highcharts({
	        chart: {
	            type: 'column'
	        },
	        colors: ['#337AB7'],
	        title: {
	            text: 'Quiz Scores'
	        },
	        xAxis: {
	            type: 'datetime',
	            dateTimeLabelFormats: {
	            	day: '%B %e',
	            	hour: '%l%P',
	            	minute: '%l%P on %B %e',
	            	second: '%l%P on %B %e',
	            	millisecond: '%l%P on %B %e'
	            },
	            minRange: 60*60*24*1*1000, //number of milliseconds in a week
	            minTickInterval: 60*60*1000
	        },
	        yAxis: {
	        	min: 0,
	        	max: 100,
	            title: {
	                text: 'Score %'
	            }
	        },
	        series: [{
	        	name: '<%= @book.name %> Scores',
	            data: <%= @scores %>,
	            minPointLength: 2,
	            // pointRange: 3600 * 1000,
	            pointWidth: 20,
	            borderColor: "#CFCFCF"
	        }]
	    });

	    $("#highcharts-0 > svg").children().last().hide();
	});

	$("#bookSelect").change(function() {
		$.ajax({
			url: '/api/users/quiz-graph',
			type: 'GET',
			data: { book_id: $(this).val(), user_id: <%= @user.id %>},
			success: function(data) {
				console.out('success')
			}
		})
	})

</script>